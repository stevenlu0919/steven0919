---
import { Icon } from "astro-icon/components";
import { profileConfig } from "../../config";
import { url } from "../../utils/url-utils";
import ImageWrapper from "../misc/ImageWrapper.astro";

// 不需要导入图片，直接使用public目录下的图片
const config = profileConfig;

// 添加CSS样式来实现二维码的悬停显示
---

<style>
    /* 悬停显示二维码的样式 */
    .card-base {
        /* 确保不会裁剪溢出内容 */
        overflow: visible !important;
    }
    
    /* 微信二维码样式 */
    .wechat-icon {
        position: relative;
    }
    
    /* 微信二维码容器 */
    .wechat-qrcode {
        position: absolute;
        width: 130px;
        height: 130px;
        padding: 10px;
        background-color: white;
        border-radius: 6px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        transform: scale(0.9);
        transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
        z-index: 99999;
    }
    
    /* 二维码图片 */
    .wechat-qrcode img {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }
    
    /* 二维码箭头 */
    .wechat-qrcode::before {
        content: '';
        position: absolute;
        left: 50%;
        transform: translateX(-50%) rotate(45deg);
        width: 12px;
        height: 12px;
        background-color: white;
        top: -6px;
        box-shadow: -2px -2px 5px rgba(0, 0, 0, 0.1);
    }
</style>

<div class="card-base p-3">
    <a aria-label="Go to About Page" href={url('/about/')}
       class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
       max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95">
        <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
        w-full h-full z-50 flex items-center justify-center">
            <Icon name="fa6-regular:address-card"
                  class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl">
            </Icon>
        </div>
        <ImageWrapper src={config.avatar || ""} alt="Profile Image of the Author" class="mx-auto lg:w-full h-full lg:mt-0 "></ImageWrapper>
    </a>
    <div class="px-2">
        <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{config.name}</div>
        <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div>
        <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>
        <div class="flex gap-2 justify-center mb-1">
            {config.links.length > 1 && config.links.map(item => (
                item.name === 'Wechat' ? (
                    <div id="wechat-icon" class="wechat-icon btn-regular rounded-lg h-10 w-10 flex items-center justify-center">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </div>
                ) : (
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
                )
            ))}
            {config.links.length == 1 && <a rel="me" aria-label={config.links[0].name} href={config.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={config.links[0].icon} class="text-[1.5rem]"></Icon>
                {config.links[0].name}
            </a>}
        </div>
    </div>
</div>

<!-- 二维码容器 -->
<div id="wechat-qrcode" class="wechat-qrcode">
    <img src="/qrcode.png" alt="微信二维码" />
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const wechatIcon = document.getElementById('wechat-icon');
    const wechatQrcode = document.getElementById('wechat-qrcode');
    
    if (!wechatIcon || !wechatQrcode) return;
    
    // 计算二维码初始尺寸（用于后续计算），因为样式为visibility:hidden时无法获取实际尺寸
    const qrcodeWidth = 130; // 与CSS中设置的宽度一致
    const qrcodeHeight = 130; // 与CSS中设置的高度一致
    
    // 将二维码元素移动到body下，避免被其他元素的overflow属性影响
    document.body.appendChild(wechatQrcode);
    
    // 显示二维码
    wechatIcon.addEventListener('mouseenter', (e) => {
      const rect = wechatIcon.getBoundingClientRect();
      
      // 将二维码水平居中于微信图标正下方
      const iconCenter = rect.left + rect.width/2;
      const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;
      wechatQrcode.style.left = `${iconCenter + scrollLeft - qrcodeWidth/2}px`;
      
      // 将二维码定位在图标下方
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      wechatQrcode.style.top = `${rect.bottom + scrollTop + 15}px`;
      wechatQrcode.style.transformOrigin = 'center top';
      
      // 显示二维码
      wechatQrcode.style.opacity = '1';
      wechatQrcode.style.visibility = 'visible';
      wechatQrcode.style.transform = 'scale(1)';
    });
    
    // 隐藏二维码
    wechatIcon.addEventListener('mouseleave', () => {
      wechatQrcode.style.opacity = '0';
      wechatQrcode.style.visibility = 'hidden';
      wechatQrcode.style.transform = 'scale(0.9)';
    });
    
    // 窗口大小变化或滚动时，如果二维码可见，则更新位置
    const updateQrcodePosition = () => {
      if (wechatQrcode.style.visibility === 'visible') {
        const rect = wechatIcon.getBoundingClientRect();
        
        // 更新水平位置 - 始终保持在图标正下方
        const iconCenter = rect.left + rect.width/2;
        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;
        wechatQrcode.style.left = `${iconCenter + scrollLeft - qrcodeWidth/2}px`;
        
        // 更新垂直位置 - 始终在图标下方
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        wechatQrcode.style.top = `${rect.bottom + scrollTop + 15}px`;
      }
    };
    
    // 监听窗口大小变化和滚动事件
    window.addEventListener('resize', updateQrcodePosition);
    window.addEventListener('scroll', updateQrcodePosition);
  });
</script>
